{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","lenght","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","renderMessages","keys","Object","key","lastMessageKey","width","title","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b7b9295.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\r\n\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState(\"\")\r\n    const { chatId, creds } = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, {text});\r\n\r\n        setValue(\"\");\r\n    }\r\n    \r\n    const handleChange = (event) => {\r\n        setValue(event.target.value)\r\n\r\n        isTyping(props, chatId)\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: \"\" })\r\n    }\r\n    \r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit} >\r\n            <input \r\n            className=\"message-input\" \r\n            placeholder=\"Send a message\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input \r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display: \"none\" }}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm\r\n","import React from 'react'\r\n\r\nconst MyMessage = ({ message }) => {\r\n    if(message.attachments &&   message.attachments.lenght > 0){\r\n        return (\r\n            <img \r\n            src={message.attachments[0].file} \r\n            alt=\"message-attachment\"\r\n            className=\"message-image\"\r\n            style={{ float: \"right\" }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"message\" style={{ float: \"right\", marginRight: \"18px\", color: \"white\", backgroundColor: \"#3B2A50\" }}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage\r\n","import React from 'react'\r\n\r\nconst TheirMessage = ({ lastMessage, message }) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return (\r\n        <div className=\"message-row\" >\r\n            {isFirstMessageByUser && (\r\n                <div \r\n                    className=\"message-avatar\"\r\n                    style={{ backgroundImage: `url(${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n            {\r\n                message?.attachments?.lenght > 0 ?\r\n                    (\r\n                        <img \r\n                        src={message.attachments[0].file} \r\n                        alt=\"message-attachment\"\r\n                        className=\"message-image\"\r\n                        style={{ marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}\r\n                        />\r\n                    )\r\n                    :\r\n                    (\r\n                        <div className=\"message\" style={{ float: \"left\", backgroundColor: \"#CABCDC\", marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}>\r\n                            {message.text}\r\n                        </div>\r\n                    )\r\n                }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage\r\n","import React from 'react';\r\nimport MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\n\r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div key={`read_${index}`}\r\n            className=\"read-receipt\"\r\n            style={{\r\n                float: isMyMessage ? \"right\" : \"left\",\r\n                backgroundImage: `url(${person?.person?.avatar})` \r\n            }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index-1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return(\r\n                <div key={`msg_${index}`} style={{ width: \"100\" }}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage ? \r\n                            <MyMessage message={message} /> : \r\n                            <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" style={{ marginRight: isMyMessage ? \"18px\" : \"0\", marginLeft: isMyMessage ? \"0px\" : \"68px\" }}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    renderMessages();\r\n    \r\n    if(!chat) return \"Loading...\";\r\n\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">\r\n                    {chat.title}\r\n                </div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => `${person.person.userName}`)}\r\n                </div>\r\n                {renderMessages()}\r\n                <div style={{ height: \"100px\" }} />\r\n                <div className=\"message-form-container\">\r\n                    <MessageForm {...props} chatId={activeChat} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed\r\n","import React,{useState} from 'react';\r\nimport axios from \"axios\";\r\n\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(\"\")\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const authObject = { \r\n            \"Project-ID\": \"2f0eafe1-124c-4000-9c77-790dc3c8aca5\",\r\n            \"User-Name\": username,\r\n            \"User-Secret\": password        \r\n        };\r\n\r\n        try {\r\n            await axios.get(\"https://api.chatengine.io/chats\", {headers: authObject});\r\n            // works out -> logged in\r\n            localStorage.setItem(\"username\", username)\r\n            localStorage.setItem(\"password\", password)\r\n\r\n            window.location.reload();\r\n        } catch(error){\r\n            // error -> try with new username\r\n            setError(\"Oppps, incorrect username or password.\")\r\n        }\r\n\r\n        // username / password => chatEngine -> give messages\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit} >\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required/>\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required/>\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">{error}</h2>\r\n                </form>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import { ChatEngine } from \"react-chat-engine\";\r\nimport ChatFeed from \"./components/ChatFeed\";\r\nimport LoginForm from \"./components/LoginForm\";\r\n\r\n\r\nimport \"./App.css\";\r\n\r\nconst App = () =>  {\r\n    if(!localStorage.getItem(\"username\")) return <LoginForm />\r\n    return (\r\n        <ChatEngine \r\n            height=\"100vh\"\r\n            projectID= \"2f0eafe1-124c-4000-9c77-790dc3c8aca5\"\r\n            userName= {localStorage.getItem(\"username\")}\r\n            userSecret={localStorage.getItem(\"password\")}\r\n            renderChatFeed = {(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}